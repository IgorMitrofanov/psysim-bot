from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from database.models import Tariff, TariffType
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select

def main_menu():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üß† –ù–∞—á–∞—Ç—å —Å–µ—Å—Å–∏—é", callback_data="main_start_session")],
        [InlineKeyboardButton(text="üé≤ –°–ª—É—á–∞–π–Ω—ã–π –∫–ª–∏–µ–Ω—Ç", callback_data="random_session")],
        [InlineKeyboardButton(text="üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∏ –ø–æ–∫—É–ø–∫–∏", callback_data="profile")],
        [InlineKeyboardButton(text="üìö –ü–æ–º–æ—â—å", callback_data="help")],
        [InlineKeyboardButton(text="üí¨ –û—Ç–∑—ã–≤—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è", callback_data="feedback_menu")],
    ])

def feedback_menu():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úçÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data="leave_feedback")],
        [InlineKeyboardButton(text="üìå –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ", callback_data="suggest_feature")],
        [InlineKeyboardButton(text="‚ö†Ô∏è –°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ", callback_data="report_error")],
        [InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_main")],
    ])
    
def cancel_feedback_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data="cancel_feedback")]
    ])

def end_session_button():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üîö –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é", callback_data="end_session")]
        ]
    )

def session_resistance_menu():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üü° –°—Ä–µ–¥–Ω–µ–µ", callback_data="resistance_medium")],
        [InlineKeyboardButton(text="üî¥ –í—ã—Å–æ–∫–æ–µ", callback_data="resistance_high")],
        [InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_main")]
    ])

def session_emotion_menu():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üò¢ –¢—Ä–µ–≤–æ–∂–Ω—ã–π –∏ —Ä–∞–Ω–∏–º—ã–π", callback_data="emotion_anxious")],
        [InlineKeyboardButton(text="üò° –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π", callback_data="emotion_aggressive")],
        [InlineKeyboardButton(text="üßä –•–æ–ª–æ–¥–Ω—ã–π, –æ—Ç—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã–π", callback_data="emotion_cold")],
        [InlineKeyboardButton(text="üò∂ –ó–∞–∫—Ä—ã—Ç—ã–π, –≤ —à–æ–∫–µ", callback_data="emotion_shocked")],
        [InlineKeyboardButton(text="üò≠ –ù–∞ –≥—Ä–∞–Ω–∏ —Å—Ä—ã–≤–∞", callback_data="emotion_breakdown")],
        [InlineKeyboardButton(text="üôÉ –ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–æ –≤–µ—Å—ë–ª—ã–π, –∏–∑–±–µ–≥–∞–µ—Ç —Ç–µ–º", callback_data="emotion_superficial")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_resistance")]
    ])

def session_confirm_menu():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üü£ –ù–∞—á–∞—Ç—å —Å–µ—Å—Å–∏—é", callback_data="session_confirm_start")],
        [InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_main")]
    ])
    

def profile_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        # [InlineKeyboardButton(text="üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="my_achievements")], # —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ –Ω—É–∂–Ω–æ
        [InlineKeyboardButton(text="üì¶ –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É", callback_data="buy")],
        [InlineKeyboardButton(text="üìä –ú–æ–∏ —Å–µ—Å—Å–∏–∏ –∏ –æ—Ç—á—ë—Ç—ã", callback_data="my_sessions")],
        [InlineKeyboardButton(text="ü§ù –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø–æ–≥—Ä–∞–º–º–∞", callback_data="referral")],
        # [InlineKeyboardButton(text="üéØ –ú–æ–∏ —Ü–µ–ª–∏", callback_data="not_implemented")], # –ø–æ–∫–∞ —É–±–µ—Ä—É
        [InlineKeyboardButton(text="üèÖ –ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è", callback_data="my_achievements")],
        [InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_main")],
    ])
    
def back_to_profile_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å", callback_data="back_profile")]
    ])

def referral_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìä –ú–æ–∏ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–µ", callback_data="my_referrals")],
        [InlineKeyboardButton(text="‚ùì –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç", callback_data="how_referral_works")],
        [InlineKeyboardButton(text="üîô –í –º–µ–Ω—é", callback_data="back_main")],
    ])

def help_detail_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîò –ö–∞–∫ –Ω–∞—á–∞—Ç—å —Å–µ—Å—Å–∏—é", callback_data="help_start_session")],
        [InlineKeyboardButton(text="üìÑ –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ —Å–µ—Å—Å–∏–∏", callback_data="help_after_session")],
        [InlineKeyboardButton(text="üí° –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="help_faq")],
        [InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_main")]
    ])

def help_back_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="help")]
    ])

def back_to_main_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_main")]
    ])
    
async def subscription_keyboard(session: AsyncSession) -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏ –∏–∑ –ë–î"""
    result = await session.execute(
        select(Tariff)
        .where(Tariff.is_active == True)
        .where(Tariff.name.in_([TariffType.START, TariffType.PRO, TariffType.UNLIMITED]))
        .order_by(Tariff.price)
    )
    tariffs = result.scalars().all()
    
    buttons = []
    for tariff in tariffs:
        price_rub = tariff.price / 100
        days = tariff.duration_days
        button_text = f"{tariff.display_name} ‚Äî {price_rub:.0f} ‚ÇΩ / {days} –¥–Ω–µ–π"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∞—Ä–∏—Ñ–∞
        if tariff.name == TariffType.START:
            button_text = "üü¢ " + button_text
        elif tariff.name == TariffType.PRO:
            button_text = "üîµ " + button_text
        elif tariff.name == TariffType.UNLIMITED:
            button_text = "‚ö´ " + button_text
        
        buttons.append(
            [InlineKeyboardButton(text=button_text, callback_data=f"activate_{tariff.name.value}")]
        )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
    buttons.append([InlineKeyboardButton(text="üîô –í –ø—Ä–æ—Ñ–∏–ª—å", callback_data="profile")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

async def subscription_keyboard_when_sessions_left(session: AsyncSession) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–∏ –∏—Å—á–µ—Ä–ø–∞–Ω–∏–∏ —Å–µ—Å—Å–∏–π (–±–µ–∑ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è)"""
    result = await session.execute(
        select(Tariff)
        .where(Tariff.is_active == True)
        .where(Tariff.name.in_([TariffType.START, TariffType.PRO, TariffType.UNLIMITED]))
        .order_by(Tariff.price)
    )
    tariffs = result.scalars().all()
    
    buttons = []
    for tariff in tariffs:
        price_rub = tariff.price / 100
        days = tariff.duration_days
        button_text = f"{tariff.display_name} ‚Äî {price_rub:.0f} ‚ÇΩ / {days} –¥–Ω–µ–π"
        
        if tariff.name == TariffType.START:
            button_text = "üü¢ " + button_text
        elif tariff.name == TariffType.PRO:
            button_text = "üîµ " + button_text
        elif tariff.name == TariffType.UNLIMITED:
            button_text = "‚ö´ " + button_text
        
        buttons.append(
            [InlineKeyboardButton(text=button_text, callback_data=f"activate_{tariff.name.value}")]
        )
    
    buttons.append([InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_main")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def persona_selection_menu(personas: list[str]) -> InlineKeyboardMarkup:
    buttons = [
        [InlineKeyboardButton(text=f"üßç {p}", callback_data=f"persona_{p}")]
        for p in personas
    ]
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_emotion")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def sessions_keyboard(sessions: list, page: int = 0, per_page: int = 5):
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Å–µ—Å—Å–∏–∏
    for session in sessions[page*per_page:(page+1)*per_page]:
        builder.row(
            InlineKeyboardButton(
                text=f"{session.persona_name or '–ë–µ–∑ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞'} - {session.started_at.strftime('%d.%m %H:%M')}",
                callback_data=f"session_detail_{session.id}"
            )
        )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
    if len(sessions) > per_page:
        if page > 0:
            builder.row(
                InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"sessions_page_{page-1}")
            )
        if (page+1)*per_page < len(sessions):
            builder.row(
                InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"sessions_page_{page+1}")
            )
    
    builder.row(
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_profile")
    )
    
    return builder.as_markup()

from aiogram.utils.keyboard import InlineKeyboardBuilder

def session_details_keyboard(session_id: int):
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(
            text="üì© –ú–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
            callback_data=f"show_user_messages_{session_id}"
        )
    )
    
    builder.row(
        InlineKeyboardButton(
            text="ü§ñ –û—Ç–≤–µ—Ç—ã –±–æ—Ç–∞",
            callback_data=f"show_bot_messages_{session_id}"
        )
    )
    
    builder.row(
        InlineKeyboardButton(
            text="üìÑ –û—Ç—á—ë—Ç",
            callback_data=f"show_report_{session_id}"
        )
    )
    
    builder.row(
        InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É",
            callback_data="back_to_sessions_list"
        )
    )
    
    return builder.as_markup()