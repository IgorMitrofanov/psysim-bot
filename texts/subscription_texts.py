from typing import Dict
from config import config
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select
from database.models import Tariff

SUBSCRIPTION_EXPIRED_TEXT = (
    "üîî –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞.\n\n"
    "–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏. "
    "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–æ–ª–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º ‚Äî –æ–±–Ω–æ–≤–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –≤ –º–µ–Ω—é —Ç–∞—Ä–∏—Ñ–æ–≤."
)

SUBSCRIPTION_WILL_EXPIRE_SOON_TEXT = (
    "üîî –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ {days_left} –¥–Ω—è(–¥–Ω–µ–π).\n\n"
)

async def get_tariff_menu_text(db_session: AsyncSession) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –º–µ–Ω—é —Ç–∞—Ä–∏—Ñ–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î"""
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã –∏–∑ –ë–î
    result = await db_session.execute(
        select(Tariff).where(Tariff.is_active == True).order_by(Tariff.price)
    )
    tariffs = result.scalars().all()
    
    if not tariffs:
        return "‚ùå –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤"
    
    menu_text = """<b>üí≥ –ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã AI-—Ç—Ä–µ–Ω–∞–∂—ë—Ä–∞ –¥–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤</b>
–í–æ –≤—Å–µ—Ö —Ç–∞—Ä–∏—Ñ–∞—Ö: –≤—ã–±–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π (—Ç–µ–º–∞—Ç–∏–∫–∞ + —É—Ä–æ–≤–µ–Ω—å —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è), —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä—Å–∫–∏–π –æ—Ç—á—ë—Ç –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π —Å–µ—Å—Å–∏–∏, —Å–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –∏ –±–µ–π–¥–∂–∏.
________________________________________
"""
    
    # –°–∏–º–≤–æ–ª—ã –¥–ª—è –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤
    tariff_icons = ["üîπ", "üî∏", "üî∑", "üî∂", "‚≠ê"]
    
    for i, tariff in enumerate(tariffs):
        icon = tariff_icons[i] if i < len(tariff_icons) else "‚ñ™Ô∏è"
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞
        tariff_block = f"""
{icon} <b>{tariff.display_name}</b>
‚Ä¢ {f'{tariff.session_quota} —Å–µ—Å—Å–∏–π' if tariff.session_quota < 999 else '–±–µ–∑–ª–∏–º–∏—Ç —Å–µ—Å—Å–∏–π'} ‚Äì {tariff.price / 100} ‚ÇΩ
"""
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ç—Ä–∏–∞–ª
        if "trial" not in tariff.name.value.lower():
            tariff_block += f"‚Ä¢ üïí –î–æ—Å—Ç—É–ø –Ω–∞ {tariff.duration_days} –¥–Ω–µ–π\n"
        
        tariff_block += """‚Ä¢ üé≠ –í—ã–±–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π, —Ç–µ–º –∏ —É—Ä–æ–≤–Ω–µ–π —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è
"""
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ñ–∏—á–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤
        if "pro" in tariff.name.value.lower():
            tariff_block += "‚Ä¢ üí¨ –¢–µ–∫—Å—Ç–æ–≤—ã–π + üéß –ê—É–¥–∏–æ-—Ä–µ–∂–∏–º\n"
            tariff_block += "‚Ä¢ üîÅ –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –∏ –ø—Ä–æ–∫–∞—á–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤\n"
        elif "unlimited" in tariff.name.value.lower():
            tariff_block += "‚Ä¢ üí¨ –¢–µ–∫—Å—Ç–æ–≤—ã–π + üéß –ê—É–¥–∏–æ-—Ä–µ–∂–∏–º\n"
            tariff_block += "‚Ä¢ üìä –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π —Å–≤–æ–¥–Ω—ã–π –æ—Ç—á—ë—Ç\n"
            tariff_block += "‚Ä¢ üéØ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ü–µ–ª–µ–π\n"
            tariff_block += "‚Ä¢ üë• –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n"
        else:  # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ñ–∏—á–∏
            tariff_block += "‚Ä¢ üí¨ –¢–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º\n"
        
        tariff_block += "‚Ä¢ üìÑ –°—É–ø–µ—Ä–≤–∏–∑–æ—Ä—Å–∫–∏–π –æ—Ç—á—ë—Ç\n"
        tariff_block += "‚Ä¢ üèÖ –ë–µ–π–¥–∂–∏ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è\n"
        tariff_block += "________________________________________"
        
        menu_text += tariff_block
    
    menu_text += "\n–ù–∞—á–Ω–∏ –ø—Ä–∞–∫—Ç–∏–∫—É —É–∂–µ —Å–µ–≥–æ–¥–Ω—è ‚Äî –≤—ã–±–∏—Ä–∞–π —Ç–∞—Ä–∏—Ñ –∏ –ø–æ–≥—Ä—É–∂–∞–π—Å—è –≤ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏!"
    
    return menu_text



# –û–±—â–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã
UNKNOWN_TARIFF = "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ"

async def get_tariff_success_text(tariff: Tariff) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –æ–± —É—Å–ø–µ—à–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ç–∞—Ä–∏—Ñ–∞"""
    return (
        f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ ¬´{tariff.display_name}¬ª —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ {tariff.duration_days} –¥–Ω–µ–π.\n"
        f"–° –≤–∞—Å —Å–ø–∏—Å–∞–Ω–æ {tariff.price / 100} ‚ÇΩ.\n\n"
        f"–î–æ—Å—Ç—É–ø–Ω–æ —Å–µ—Å—Å–∏–π: {tariff.session_quota if tariff.session_quota < 999 else '–±–µ–∑–ª–∏–º–∏—Ç'}"
    )

TARIFF_FAIL_FUNDS = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å."
TARIFF_USER_NOT_FOUND = "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ."

SUBSCRIPTION_EXPIRED_TEXT = (
    "üîî –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞.\n"
    "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–µ—Ä–≤–∏—Å–æ–º ‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –≤ –º–µ–Ω—é."
)

async def get_tariff_map(db_session: AsyncSession) -> Dict[str, Tariff]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Ç–∞—Ä–∏—Ñ–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback-–æ–≤"""
    result = await db_session.execute(select(Tariff).where(Tariff.is_active == True))
    tariffs = result.scalars().all()
    
    return {
        f"activate_{tariff.name}": tariff
        for tariff in tariffs
    }