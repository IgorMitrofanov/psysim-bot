from aiogram import Router, types
from aiogram.fsm.context import FSMContext

from keyboards.builder import profile_keyboard, referral_keyboard
from texts.common import profile_text, referral_text
from keyboards.builder import main_menu

router = Router()

@router.callback_query(lambda c: c.data == "profile")
async def profile_handler(callback: types.CallbackQuery, state: FSMContext):
    user_data = {
        "username": callback.from_user.username or "unknown",
        "telegram_id": callback.from_user.id,
        "registered_at": "10 –º–∞—è 2025",
        "active_tariff": "–ü–æ–¥–ø–∏—Å–∫–∞ \"–ë–µ–∑–ª–∏–º–∏—Ç –Ω–∞ 30 –¥–Ω–µ–π\"",
        "tariff_expires": "17 –∏—é–ª—è 2025",
        "sessions_done": 14,
        "last_scenario": "–ì—Ä–∞–Ω–∏—Ü—ã / –í—ã—Å–æ–∫–æ–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ",
    }
    await callback.message.edit_text(
        profile_text(user_data), 
        reply_markup=profile_keyboard()
    )

@router.callback_query(lambda c: c.data == "referral")
async def referral_handler(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_text(
        referral_text(), 
        reply_markup=referral_keyboard()
    )

@router.callback_query(lambda c: c.data in ["copy_referral_link", "my_referrals", "how_referral_works"])
async def referral_submenu_handler(callback: types.CallbackQuery):
    texts = {
        "copy_referral_link": "üìé –°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ (–∑–∞–≥–ª—É—à–∫–∞).",
        "my_referrals": "üìä –°–ø–∏—Å–æ–∫ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö (–∑–∞–≥–ª—É—à–∫–∞).",
        "how_referral_works": "‚ùì –ü–æ—è—Å–Ω–µ–Ω–∏–µ, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–∫–∞ (–∑–∞–≥–ª—É—à–∫–∞).",
    }
    await callback.answer(texts[callback.data], show_alert=True)